class DSU
{
public:
  vector<int> parent, rank, cnt;
  int cnt_comp; // total components
  DSU(int n)
  {
    parent.resize(n);
    rank.resize(n);
    cnt_comp = n;
    for (int i = 0; i < n; i++)
    {
      parent[i] = i;
      rank[i] = 1;
    }
  }
  void join(int a, int b)
  {
    a = find(a);
    b = find(b);
    if (a == b)
      return;
    cnt_comp--;
    if (rank[a] >= rank[b])
    {
      parent[b] = a;
      rank[a] += rank[b];
    }
    else if (rank[a] < rank[b])
    {
      parent[a] = b;
      rank[b] += rank[a];
    }
  }
  int find(int a)
  {
    return a == parent[a] ? a : parent[a] = find(parent[a]);
  }
  bool check(int a, int b)
  {
    return find(a) == find(b);
  }
};